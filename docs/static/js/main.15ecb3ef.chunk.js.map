{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,oCACI,0BAAMC,SAbO,SAAAC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAQV,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAtBW,SAAAP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,uBCPlBK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAXtB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OADAN,QAAQC,IAAI,CAACc,KAAGC,QAAMV,QAElB,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCuBDO,EA1BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAJ,SAAEA,GAAe,IAAD,EACdhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAsBxC,OAjBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAGE7B,QAAQC,IAAI4B,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAK1B,CAACpB,IAGIqB,EDpBwBK,CAAa1B,GAAhCa,EAFgB,EAErBN,KAAaa,EAFQ,EAERA,QAGpB,OACI,kBAAC,WAAD,KACI,4BAAKpB,GACJoB,GAAW,sCACZ,yBAAKJ,UAAU,aAGPH,EAAOJ,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACND,UEgBjBkB,EA/BM,WAAM,MAGa5C,mBAAU,CAAC,YAHxB,mBAGhB6C,EAHgB,KAGJ9C,EAHI,KAMvB,OACI,kBAAC,WAAD,KACI,4CACA,kBAAC,EAAD,CACIA,cAAgBA,IAEpB,6BAEA,4BAIK8C,EAAWpB,KAAK,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAWA,U,MCpBnC8B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.15ecb3ef.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange  = e =>{\n        console.log(e.target.value);\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        \n        if(inputValue.trim().length > 2){\n\n            setCategories(cats => [inputValue,...cats]);\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit} >\n                <input \n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                />\n            </form>\n        </>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired //setCategories es una funcion que modifica el state\n}\n","\n\nexport const getGifs = async( category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=or6ejG0C5F4wU1DVaEgGNv8OmlHX41KR`;\n\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    \n    const gifs = data.map(img =>{\n        return {\n            id:img.id,\n            title: img.title,\n            url:img.images?.downsized_medium.url  //Se escribe  ? para saber si existen las imagenes\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n\n    console.log({id,title,url});\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React,{Fragment} from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\n\nconst GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n\n\n    return (\n        <Fragment>\n            <h3>{category}</h3>\n            {loading && <p>Loading</p> }\n            <div className='card-grid'>\n                \n                {\n                    images.map( (img) =>(\n                        <GifGridItem \n                            key= {img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            \n            \n            </div> \n        </Fragment>\n    )\n}\n\nexport default GifGrid\n","import { useState,useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data:[],\n        loading: true\n    });\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => {\n                \n               \n                    console.log(imgs);\n                    setState({\n                        data: imgs,\n                        loading:false\n                    })\n              \n            })\n\n    },[category])\n\n\n    return state; // el state es data [] y loading: true\n}\n\n","import React, {Fragment,useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\n\nconst GifExpertApp = () => {\n\n    //const categories = ['One Punch','Samurai X','Dragon Ball']\n    const [categories, setCategories] = useState( ['Chunkie']);\n\n\n    return ( \n        <Fragment>\n            <h2>GifExpertApp</h2>\n            <AddCategory\n                setCategories ={setCategories}\n            />\n            <hr/>\n           \n            <ol>\n                {/* <li>One</li>\n                <li>Samurai</li>\n                <li>Dragon</li> */}\n                {categories.map( category => (\n                    <GifGrid \n                        key={category}\n                        category= {category} \n                    />\n                    ))\n                }\n            </ol>\n            \n        </Fragment>\n     );\n}\n \nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n//Gif"],"sourceRoot":""}